generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Detail_job {
  detail_job_id Int       @id @default(autoincrement())
  detail_name   String    @db.VarChar(255)
  detail_image  String    @db.VarChar(255)
  job_type_id   Int?
  Detail        Detail[]
  Job_type      Job_type? @relation(fields: [job_type_id], references: [job_type_id], onDelete: Cascade, onUpdate: NoAction, map: "Detail_job_ibfk_1")

  @@index([job_type_id], map: "job_type_id")
}

model Hire_job {
  hire_job_id Int      @id @default(autoincrement())
  job_id      Int?
  user_id     Int?
  hire_day    DateTime @db.DateTime(0)
  finish      Boolean
  Job         Job?     @relation(fields: [job_id], references: [job_id], onDelete: Cascade, onUpdate: NoAction, map: "Hire_job_ibfk_1")
  User        Users?   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "Hire_job_ibfk_2")

  @@index([job_id], map: "job_id")
  @@index([user_id], map: "user_id")
}

model Job {
  job_id      Int        @id @default(autoincrement())
  job_name    String     @db.VarChar(255)
  evaluation  Int
  price       Int
  job_image   String     @db.VarChar(255)
  description String     @db.VarChar(255)
  sub_desc    String     @db.VarChar(255)
  job_star    Int
  detail_id   Int?
  user_id     Int?
  Comments    Comments[]
  Hire_job    Hire_job[]
  Detail      Detail?    @relation(fields: [detail_id], references: [detail_id], onDelete: Cascade, onUpdate: NoAction, map: "Job_ibfk_1")
  User        Users?     @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "Job_ibfk_2")

  @@index([user_id], map: "user_id")
  @@index([detail_id], map: "detail_id")
}

model Job_type {
  job_type_id   Int          @id @default(autoincrement())
  job_type_name String       @db.VarChar(255)
  Detail_job    Detail_job[]
}

model Comments {
  comment_id   Int      @id @default(autoincrement())
  job_id       Int?
  user_id      Int?
  comment_day  DateTime @db.DateTime(0)
  content      String   @db.VarChar(255)
  comment_star Int
  Job          Job?     @relation(fields: [job_id], references: [job_id], onDelete: Cascade, onUpdate: NoAction, map: "Comments_ibfk_1")
  Users        Users?   @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction, map: "Comments_ibfk_2")

  @@index([job_id], map: "job_id")
  @@index([user_id], map: "user_id")
}

model Users {
  user_id       Int        @id @default(autoincrement())
  fullname      String     @db.VarChar(255)
  email         String     @db.VarChar(255)
  pass_word     String     @db.VarChar(255)
  phone         String     @db.VarChar(15)
  birth_day     String     @db.VarChar(15)
  gender        String     @db.VarChar(15)
  role          String     @db.VarChar(15)
  skill         String     @db.VarChar(255)
  certification String     @db.VarChar(255)
  avatar        String     @db.VarChar(255)
  Comments      Comments[]
  Hire_job      Hire_job[]
  Job           Job[]
}

model Detail {
  detail_id     Int         @id @default(autoincrement())
  name          String      @db.VarChar(255)
  detail_job_id Int?
  Detail_job    Detail_job? @relation(fields: [detail_job_id], references: [detail_job_id], onDelete: Cascade, onUpdate: NoAction, map: "Detail_ibfk_1")
  Job           Job[]

  @@index([detail_job_id], map: "detail_job_id")
}
